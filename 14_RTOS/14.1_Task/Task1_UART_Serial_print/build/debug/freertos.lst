ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/freertos.c"
  18              		.section	.rodata.StartTask1.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 5461736B 		.ascii	"Task1\000"
  21      3100
  22              		.section	.text.StartTask1,"ax",%progbits
  23              		.align	1
  24              		.global	StartTask1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	StartTask1:
  30              	.LFB72:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 2


  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** osThreadId Task2Handle;
  49:Core/Src/freertos.c **** osThreadId Task3Handle;
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId Task1Handle;
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  55:Core/Src/freertos.c **** void StartTask2(void const * argument);
  56:Core/Src/freertos.c **** void StartTask3(void const * argument);
  57:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** void StartTask1(void const * argument);
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  64:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  67:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  68:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  71:Core/Src/freertos.c **** {
  72:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  73:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  74:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  75:Core/Src/freertos.c ****   /* place for user code */
  76:Core/Src/freertos.c **** }
  77:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** /**
  80:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  81:Core/Src/freertos.c ****   * @param  None
  82:Core/Src/freertos.c ****   * @retval None
  83:Core/Src/freertos.c ****   */
  84:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 3


  85:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/freertos.c **** 
  87:Core/Src/freertos.c ****   /* USER CODE END Init */
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  90:Core/Src/freertos.c ****   /* add mutexes, ... */
  91:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  94:Core/Src/freertos.c ****   /* add semaphores, ... */
  95:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  98:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
  99:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 102:Core/Src/freertos.c ****   /* add queues, ... */
 103:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c ****   /* Create the thread(s) */
 106:Core/Src/freertos.c ****   /* definition and creation of Task1 */
 107:Core/Src/freertos.c ****   osThreadDef(Task1, StartTask1, osPriorityNormal, 0, 128);
 108:Core/Src/freertos.c ****   Task1Handle = osThreadCreate(osThread(Task1), NULL);
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 111:Core/Src/freertos.c ****   osThreadDef(Task2, StartTask2, -1, 0, 128);
 112:Core/Src/freertos.c ****   Task2Handle = osThreadCreate(osThread(Task2), NULL);
 113:Core/Src/freertos.c ****   osThreadDef(Task3, StartTask3, -2, 0, 128);
 114:Core/Src/freertos.c ****   Task2Handle = osThreadCreate(osThread(Task3), NULL);
 115:Core/Src/freertos.c ****   /* add threads, ... */
 116:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 117:Core/Src/freertos.c **** 
 118:Core/Src/freertos.c **** }
 119:Core/Src/freertos.c **** 
 120:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartTask1 */
 121:Core/Src/freertos.c **** /**
 122:Core/Src/freertos.c ****   * @brief  Function implementing the Task1 thread.
 123:Core/Src/freertos.c ****   * @param  argument: Not used
 124:Core/Src/freertos.c ****   * @retval None
 125:Core/Src/freertos.c ****   */
 126:Core/Src/freertos.c **** /* USER CODE END Header_StartTask1 */
 127:Core/Src/freertos.c **** void StartTask1(void const * argument)
 128:Core/Src/freertos.c **** {
  31              		.loc 1 128 1 view -0
  32              		.cfi_startproc
  33              		@ Volatile: function does not return.
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              	.LVL0:
  37              		.loc 1 128 1 is_stmt 0 view .LVU1
  38 0000 08B5     		push	{r3, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
  42              	.LVL1:
  43              	.L2:
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 4


 129:Core/Src/freertos.c ****   /* USER CODE BEGIN StartTask1 */
 130:Core/Src/freertos.c ****   /* Infinite loop */
 131:Core/Src/freertos.c ****   while(1)
  44              		.loc 1 131 3 is_stmt 1 view .LVU2
  45              	.LBB2:
 132:Core/Src/freertos.c ****   {
 133:Core/Src/freertos.c ****     mPrint("Task1");
  46              		.loc 1 133 5 view .LVU3
  47 0002 0448     		ldr	r0, .L4
  48 0004 FFF7FEFF 		bl	mPrint
  49              	.LVL2:
 134:Core/Src/freertos.c ****     osDelay(1000);
  50              		.loc 1 134 5 discriminator 1 view .LVU4
  51 0008 4FF47A70 		mov	r0, #1000
  52 000c FFF7FEFF 		bl	osDelay
  53              	.LVL3:
  54              	.LBE2:
 131:Core/Src/freertos.c ****   {
  55              		.loc 1 131 8 view .LVU5
  56 0010 F7E7     		b	.L2
  57              	.L5:
  58 0012 00BF     		.align	2
  59              	.L4:
  60 0014 00000000 		.word	.LC0
  61              		.cfi_endproc
  62              	.LFE72:
  64              		.section	.rodata.StartTask2.str1.4,"aMS",%progbits,1
  65              		.align	2
  66              	.LC2:
  67 0000 5461736B 		.ascii	"Task2\000"
  67      3200
  68              		.section	.text.StartTask2,"ax",%progbits
  69              		.align	1
  70              		.global	StartTask2
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	StartTask2:
  76              	.LFB73:
 135:Core/Src/freertos.c ****   }
 136:Core/Src/freertos.c ****   /* USER CODE END StartTask1 */
 137:Core/Src/freertos.c **** }
 138:Core/Src/freertos.c **** 
 139:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 140:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 141:Core/Src/freertos.c **** void StartTask2(void const * argument)
 142:Core/Src/freertos.c **** {
  77              		.loc 1 142 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              	.LVL4:
  83              		.loc 1 142 1 is_stmt 0 view .LVU7
  84 0000 08B5     		push	{r3, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 5


  87              		.cfi_offset 14, -4
  88              	.LVL5:
  89              	.L7:
 143:Core/Src/freertos.c ****   /* USER CODE BEGIN StartTask1 */
 144:Core/Src/freertos.c ****   /* Infinite loop */
 145:Core/Src/freertos.c ****   while(1)
  90              		.loc 1 145 3 is_stmt 1 view .LVU8
  91              	.LBB3:
 146:Core/Src/freertos.c ****   {
 147:Core/Src/freertos.c ****     mPrint("Task2");
  92              		.loc 1 147 5 view .LVU9
  93 0002 0448     		ldr	r0, .L9
  94 0004 FFF7FEFF 		bl	mPrint
  95              	.LVL6:
 148:Core/Src/freertos.c ****     osDelay(1000);
  96              		.loc 1 148 5 discriminator 1 view .LVU10
  97 0008 4FF47A70 		mov	r0, #1000
  98 000c FFF7FEFF 		bl	osDelay
  99              	.LVL7:
 100              	.LBE3:
 145:Core/Src/freertos.c ****   {
 101              		.loc 1 145 8 view .LVU11
 102 0010 F7E7     		b	.L7
 103              	.L10:
 104 0012 00BF     		.align	2
 105              	.L9:
 106 0014 00000000 		.word	.LC2
 107              		.cfi_endproc
 108              	.LFE73:
 110              		.section	.rodata.StartTask3.str1.4,"aMS",%progbits,1
 111              		.align	2
 112              	.LC6:
 113 0000 5461736B 		.ascii	"Task3 \000"
 113      332000
 114              		.section	.text.StartTask3,"ax",%progbits
 115              		.align	1
 116              		.global	StartTask3
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	StartTask3:
 122              	.LFB74:
 149:Core/Src/freertos.c ****   }
 150:Core/Src/freertos.c ****   /* USER CODE END StartTask1 */
 151:Core/Src/freertos.c **** }
 152:Core/Src/freertos.c **** void StartTask3(void const * argument)
 153:Core/Src/freertos.c **** {
 123              		.loc 1 153 1 view -0
 124              		.cfi_startproc
 125              		@ Volatile: function does not return.
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              	.LVL8:
 129              		.loc 1 153 1 is_stmt 0 view .LVU13
 130 0000 08B5     		push	{r3, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 3, -8
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 6


 133              		.cfi_offset 14, -4
 134              	.LVL9:
 135              	.L12:
 154:Core/Src/freertos.c ****   /* USER CODE BEGIN StartTask1 */
 155:Core/Src/freertos.c ****   /* Infinite loop */
 156:Core/Src/freertos.c ****   while(1)
 136              		.loc 1 156 3 is_stmt 1 view .LVU14
 137              	.LBB4:
 157:Core/Src/freertos.c ****   {
 158:Core/Src/freertos.c ****     mPrint("Task3 ");
 138              		.loc 1 158 5 view .LVU15
 139 0002 0448     		ldr	r0, .L14
 140 0004 FFF7FEFF 		bl	mPrint
 141              	.LVL10:
 159:Core/Src/freertos.c ****     osDelay(1000);
 142              		.loc 1 159 5 discriminator 1 view .LVU16
 143 0008 4FF47A70 		mov	r0, #1000
 144 000c FFF7FEFF 		bl	osDelay
 145              	.LVL11:
 146              	.LBE4:
 156:Core/Src/freertos.c ****   {
 147              		.loc 1 156 8 view .LVU17
 148 0010 F7E7     		b	.L12
 149              	.L15:
 150 0012 00BF     		.align	2
 151              	.L14:
 152 0014 00000000 		.word	.LC6
 153              		.cfi_endproc
 154              	.LFE74:
 156              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 157              		.align	1
 158              		.global	vApplicationGetIdleTaskMemory
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 163              	vApplicationGetIdleTaskMemory:
 164              	.LVL12:
 165              	.LFB70:
  71:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 166              		.loc 1 71 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
  72:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 171              		.loc 1 72 3 view .LVU19
  72:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 172              		.loc 1 72 25 is_stmt 0 view .LVU20
 173 0000 034B     		ldr	r3, .L17
 174 0002 0360     		str	r3, [r0]
  73:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 175              		.loc 1 73 3 is_stmt 1 view .LVU21
  73:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 176              		.loc 1 73 27 is_stmt 0 view .LVU22
 177 0004 034B     		ldr	r3, .L17+4
 178 0006 0B60     		str	r3, [r1]
  74:Core/Src/freertos.c ****   /* place for user code */
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 7


 179              		.loc 1 74 3 is_stmt 1 view .LVU23
  74:Core/Src/freertos.c ****   /* place for user code */
 180              		.loc 1 74 25 is_stmt 0 view .LVU24
 181 0008 8023     		movs	r3, #128
 182 000a 1360     		str	r3, [r2]
  76:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 183              		.loc 1 76 1 view .LVU25
 184 000c 7047     		bx	lr
 185              	.L18:
 186 000e 00BF     		.align	2
 187              	.L17:
 188 0010 00000000 		.word	xIdleTaskTCBBuffer
 189 0014 00000000 		.word	xIdleStack
 190              		.cfi_endproc
 191              	.LFE70:
 193              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 194              		.align	1
 195              		.global	MX_FREERTOS_Init
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	MX_FREERTOS_Init:
 201              	.LFB71:
  84:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 202              		.loc 1 84 29 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 88
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 30B5     		push	{r4, r5, lr}
 207              		.cfi_def_cfa_offset 12
 208              		.cfi_offset 4, -12
 209              		.cfi_offset 5, -8
 210              		.cfi_offset 14, -4
 211 0002 97B0     		sub	sp, sp, #92
 212              		.cfi_def_cfa_offset 104
 107:Core/Src/freertos.c ****   Task1Handle = osThreadCreate(osThread(Task1), NULL);
 213              		.loc 1 107 3 view .LVU27
 214 0004 1B4C     		ldr	r4, .L21
 215 0006 0DF13C0C 		add	ip, sp, #60
 216 000a A646     		mov	lr, r4
 217 000c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 218 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 219 0014 9EE80700 		ldm	lr, {r0, r1, r2}
 220 0018 8CE80700 		stm	ip, {r0, r1, r2}
 108:Core/Src/freertos.c **** 
 221              		.loc 1 108 3 view .LVU28
 108:Core/Src/freertos.c **** 
 222              		.loc 1 108 17 is_stmt 0 view .LVU29
 223 001c 0021     		movs	r1, #0
 224 001e 0FA8     		add	r0, sp, #60
 225 0020 FFF7FEFF 		bl	osThreadCreate
 226              	.LVL13:
 108:Core/Src/freertos.c **** 
 227              		.loc 1 108 15 discriminator 1 view .LVU30
 228 0024 144B     		ldr	r3, .L21+4
 229 0026 1860     		str	r0, [r3]
 111:Core/Src/freertos.c ****   Task2Handle = osThreadCreate(osThread(Task2), NULL);
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 8


 230              		.loc 1 111 3 is_stmt 1 view .LVU31
 231 0028 0DF1200C 		add	ip, sp, #32
 232 002c 04F11C0E 		add	lr, r4, #28
 233 0030 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 234 0034 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 235 0038 9EE80700 		ldm	lr, {r0, r1, r2}
 236 003c 8CE80700 		stm	ip, {r0, r1, r2}
 112:Core/Src/freertos.c ****   osThreadDef(Task3, StartTask3, -2, 0, 128);
 237              		.loc 1 112 3 view .LVU32
 112:Core/Src/freertos.c ****   osThreadDef(Task3, StartTask3, -2, 0, 128);
 238              		.loc 1 112 17 is_stmt 0 view .LVU33
 239 0040 0021     		movs	r1, #0
 240 0042 08A8     		add	r0, sp, #32
 241 0044 FFF7FEFF 		bl	osThreadCreate
 242              	.LVL14:
 112:Core/Src/freertos.c ****   osThreadDef(Task3, StartTask3, -2, 0, 128);
 243              		.loc 1 112 15 discriminator 1 view .LVU34
 244 0048 0C4D     		ldr	r5, .L21+8
 245 004a 2860     		str	r0, [r5]
 113:Core/Src/freertos.c ****   Task2Handle = osThreadCreate(osThread(Task3), NULL);
 246              		.loc 1 113 3 is_stmt 1 view .LVU35
 247 004c 0DF1040E 		add	lr, sp, #4
 248 0050 04F1380C 		add	ip, r4, #56
 249 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 250 0058 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 251 005c 9CE80700 		ldm	ip, {r0, r1, r2}
 252 0060 8EE80700 		stm	lr, {r0, r1, r2}
 114:Core/Src/freertos.c ****   /* add threads, ... */
 253              		.loc 1 114 3 view .LVU36
 114:Core/Src/freertos.c ****   /* add threads, ... */
 254              		.loc 1 114 17 is_stmt 0 view .LVU37
 255 0064 0021     		movs	r1, #0
 256 0066 01A8     		add	r0, sp, #4
 257 0068 FFF7FEFF 		bl	osThreadCreate
 258              	.LVL15:
 114:Core/Src/freertos.c ****   /* add threads, ... */
 259              		.loc 1 114 15 discriminator 1 view .LVU38
 260 006c 2860     		str	r0, [r5]
 118:Core/Src/freertos.c **** 
 261              		.loc 1 118 1 view .LVU39
 262 006e 17B0     		add	sp, sp, #92
 263              		.cfi_def_cfa_offset 12
 264              		@ sp needed
 265 0070 30BD     		pop	{r4, r5, pc}
 266              	.L22:
 267 0072 00BF     		.align	2
 268              	.L21:
 269 0074 00000000 		.word	.LANCHOR0
 270 0078 00000000 		.word	Task1Handle
 271 007c 00000000 		.word	Task2Handle
 272              		.cfi_endproc
 273              	.LFE71:
 275              		.section	.rodata.str1.4,"aMS",%progbits,1
 276              		.align	2
 277              	.LC4:
 278 0000 5461736B 		.ascii	"Task3\000"
 278      3300
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 9


 279              		.section	.bss.xIdleStack,"aw",%nobits
 280              		.align	2
 283              	xIdleStack:
 284 0000 00000000 		.space	512
 284      00000000 
 284      00000000 
 284      00000000 
 284      00000000 
 285              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 286              		.align	2
 289              	xIdleTaskTCBBuffer:
 290 0000 00000000 		.space	84
 290      00000000 
 290      00000000 
 290      00000000 
 290      00000000 
 291              		.global	Task1Handle
 292              		.section	.bss.Task1Handle,"aw",%nobits
 293              		.align	2
 296              	Task1Handle:
 297 0000 00000000 		.space	4
 298              		.global	Task3Handle
 299              		.section	.bss.Task3Handle,"aw",%nobits
 300              		.align	2
 303              	Task3Handle:
 304 0000 00000000 		.space	4
 305              		.global	Task2Handle
 306              		.section	.bss.Task2Handle,"aw",%nobits
 307              		.align	2
 310              	Task2Handle:
 311 0000 00000000 		.space	4
 312              		.section	.rodata
 313              		.align	2
 314              		.set	.LANCHOR0,. + 0
 315              	.LC7:
 316 0000 00000000 		.word	.LC0
 317 0004 00000000 		.word	StartTask1
 318 0008 0000     		.short	0
 319 000a 0000     		.space	2
 320 000c 00000000 		.word	0
 321 0010 80000000 		.word	128
 322 0014 00000000 		.word	0
 323 0018 00000000 		.word	0
 324              	.LC8:
 325 001c 00000000 		.word	.LC2
 326 0020 00000000 		.word	StartTask2
 327 0024 FFFF     		.short	-1
 328 0026 0000     		.space	2
 329 0028 00000000 		.word	0
 330 002c 80000000 		.word	128
 331 0030 00000000 		.word	0
 332 0034 00000000 		.word	0
 333              	.LC9:
 334 0038 00000000 		.word	.LC4
 335 003c 00000000 		.word	StartTask3
 336 0040 FEFF     		.short	-2
 337 0042 0000     		.space	2
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 10


 338 0044 00000000 		.word	0
 339 0048 80000000 		.word	128
 340 004c 00000000 		.word	0
 341 0050 00000000 		.word	0
 342              		.text
 343              	.Letext0:
 344              		.file 2 "C:\\ST\\STM32CubeCLT_1.18.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/13.3.1/..
 345              		.file 3 "C:\\ST\\STM32CubeCLT_1.18.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/13.3.1/..
 346              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 347              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 348              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 349              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:19     .rodata.StartTask1.str1.4:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:23     .text.StartTask1:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:29     .text.StartTask1:00000000 StartTask1
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:60     .text.StartTask1:00000014 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:65     .rodata.StartTask2.str1.4:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:69     .text.StartTask2:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:75     .text.StartTask2:00000000 StartTask2
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:106    .text.StartTask2:00000014 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:111    .rodata.StartTask3.str1.4:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:115    .text.StartTask3:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:121    .text.StartTask3:00000000 StartTask3
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:152    .text.StartTask3:00000014 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:157    .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:163    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:188    .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:289    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:283    .bss.xIdleStack:00000000 xIdleStack
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:194    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:200    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:269    .text.MX_FREERTOS_Init:00000074 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:296    .bss.Task1Handle:00000000 Task1Handle
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:310    .bss.Task2Handle:00000000 Task2Handle
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:276    .rodata.str1.4:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:280    .bss.xIdleStack:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:286    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:293    .bss.Task1Handle:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:303    .bss.Task3Handle:00000000 Task3Handle
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:300    .bss.Task3Handle:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:307    .bss.Task2Handle:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccNJJB14.s:313    .rodata:00000000 $d

UNDEFINED SYMBOLS
mPrint
osDelay
osThreadCreate
