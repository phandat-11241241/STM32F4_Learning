ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** #define MPU6050_ADDR 0x68<<1
  35:Core/Src/main.c **** #define PWR_MGMT_1  0x6B
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_I2C1_Init(void);
  54:Core/Src/main.c **** void Power_Management_1(void);
  55:Core/Src/main.c **** void MPU6050_Init(void);
  56:Core/Src/main.c **** void _rate_cfg(void);
  57:Core/Src/main.c **** void GYRO_ACCEL_cfg(void); 
  58:Core/Src/main.c **** void  MPU6050_Read_Gyro(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** void Power_Management_1(void){
  66:Core/Src/main.c ****   uint8_t data = 0x00;
  67:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x6B, 1, &data, 1, 1000);
  68:Core/Src/main.c ****   // data = 0xA0;
  69:Core/Src/main.c ****   // HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x6B, 1, &data, 1, 1000);
  70:Core/Src/main.c **** }
  71:Core/Src/main.c **** void Sample_rate_cfg(void){
  72:Core/Src/main.c **** 	uint8_t Data = 0;
  73:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x6B, 1, &Data, 1, 1000);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** }
  76:Core/Src/main.c **** void GYRO_ACCEL_cfg(void){
  77:Core/Src/main.c ****   uint8_t data = 0x00;
  78:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x1B, 1, &data, 1, 1000); // config gyro
  79:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x1C, 1, &data, 1, 1000); // config accel
  80:Core/Src/main.c **** }
  81:Core/Src/main.c **** void MPU6050_Init(void){
  82:Core/Src/main.c ****   uint8_t data;
  83:Core/Src/main.c ****   uint8_t check;
  84:Core/Src/main.c ****   check = HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, 0x75, 1, &data,1, 1000 );
  85:Core/Src/main.c ****   if(data == 0x68){
  86:Core/Src/main.c ****     Power_Management_1();
  87:Core/Src/main.c ****     Sample_rate_cfg();
  88:Core/Src/main.c ****     GYRO_ACCEL_cfg();
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 3


  89:Core/Src/main.c ****   
  90:Core/Src/main.c ****   }
  91:Core/Src/main.c **** }
  92:Core/Src/main.c **** uint16_t Gyro_X_RAW;
  93:Core/Src/main.c **** uint16_t Gyro_Y_RAW;
  94:Core/Src/main.c **** uint16_t Gyro_Z_RAW;
  95:Core/Src/main.c **** float Gx;
  96:Core/Src/main.c **** float Gy;
  97:Core/Src/main.c **** float Gz;
  98:Core/Src/main.c **** uint16_t Rec_Data[6];
  99:Core/Src/main.c **** void MPU6050_Read_Gyro (void)
 100:Core/Src/main.c **** {
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   HAL_I2C_Mem_Read (&hi2c1, MPU6050_ADDR, 0x43, 1, Rec_Data, 6, 1000);
 103:Core/Src/main.c ****   Gyro_X_RAW = (int16_t)(Rec_Data[0] << 8 | Rec_Data [1]);
 104:Core/Src/main.c ****   Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 105:Core/Src/main.c ****   Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 106:Core/Src/main.c ****   Gx = (float)Gyro_X_RAW/131.0;
 107:Core/Src/main.c ****   Gy = (float)Gyro_Y_RAW/131.0;
 108:Core/Src/main.c ****   Gz = (float)Gyro_Z_RAW/131.0;
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** /* USER CODE END 0 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****   * @brief  The application entry point.
 114:Core/Src/main.c ****   * @retval int
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** int main(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END 1 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 126:Core/Src/main.c ****   HAL_Init();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE END Init */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Configure the system clock */
 133:Core/Src/main.c ****   SystemClock_Config();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END SysInit */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Initialize all configured peripherals */
 140:Core/Src/main.c ****   MX_GPIO_Init();
 141:Core/Src/main.c ****   MX_I2C1_Init();
 142:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 143:Core/Src/main.c ****   /* USER CODE END 2 */
 144:Core/Src/main.c ****   MPU6050_Init();
 145:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 4


 146:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 147:Core/Src/main.c ****   while (1)
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     /* USER CODE END WHILE */
 150:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****    MPU6050_Read_Gyro ();
 153:Core/Src/main.c ****    HAL_Delay(100);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   /* USER CODE END 3 */
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief System Clock Configuration
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void SystemClock_Config(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 171:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 174:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 202:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 5


 203:Core/Src/main.c ****   * @retval None
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c **** static void MX_I2C1_Init(void)
 206:Core/Src/main.c **** {
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 215:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 216:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 217:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 218:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 219:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 220:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 221:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 222:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 223:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 224:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief GPIO Initialization Function
 236:Core/Src/main.c ****   * @param None
 237:Core/Src/main.c ****   * @retval None
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c **** static void MX_GPIO_Init(void)
 240:Core/Src/main.c **** {
  28              		.loc 1 240 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
 241:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 246:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  35              		.loc 1 246 3 view .LVU1
  36              	.LBB4:
  37              		.loc 1 246 3 view .LVU2
  38 0002 0021     		movs	r1, #0
  39 0004 0091     		str	r1, [sp]
  40              		.loc 1 246 3 view .LVU3
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 6


  41 0006 0B4B     		ldr	r3, .L3
  42 0008 1A6B     		ldr	r2, [r3, #48]
  43 000a 42F00102 		orr	r2, r2, #1
  44 000e 1A63     		str	r2, [r3, #48]
  45              		.loc 1 246 3 view .LVU4
  46 0010 1A6B     		ldr	r2, [r3, #48]
  47 0012 02F00102 		and	r2, r2, #1
  48 0016 0092     		str	r2, [sp]
  49              		.loc 1 246 3 view .LVU5
  50 0018 009A     		ldr	r2, [sp]
  51              	.LBE4:
  52              		.loc 1 246 3 view .LVU6
 247:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  53              		.loc 1 247 3 view .LVU7
  54              	.LBB5:
  55              		.loc 1 247 3 view .LVU8
  56 001a 0191     		str	r1, [sp, #4]
  57              		.loc 1 247 3 view .LVU9
  58 001c 1A6B     		ldr	r2, [r3, #48]
  59 001e 42F00202 		orr	r2, r2, #2
  60 0022 1A63     		str	r2, [r3, #48]
  61              		.loc 1 247 3 view .LVU10
  62 0024 1B6B     		ldr	r3, [r3, #48]
  63 0026 03F00203 		and	r3, r3, #2
  64 002a 0193     		str	r3, [sp, #4]
  65              		.loc 1 247 3 view .LVU11
  66 002c 019B     		ldr	r3, [sp, #4]
  67              	.LBE5:
  68              		.loc 1 247 3 view .LVU12
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 252:Core/Src/main.c **** }
  69              		.loc 1 252 1 is_stmt 0 view .LVU13
  70 002e 02B0     		add	sp, sp, #8
  71              		.cfi_def_cfa_offset 0
  72              		@ sp needed
  73 0030 7047     		bx	lr
  74              	.L4:
  75 0032 00BF     		.align	2
  76              	.L3:
  77 0034 00380240 		.word	1073887232
  78              		.cfi_endproc
  79              	.LFE142:
  81              		.section	.text.Power_Management_1,"ax",%progbits
  82              		.align	1
  83              		.global	Power_Management_1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	Power_Management_1:
  89              	.LFB134:
  65:Core/Src/main.c ****   uint8_t data = 0x00;
  90              		.loc 1 65 30 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 7


  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94 0000 00B5     		push	{lr}
  95              		.cfi_def_cfa_offset 4
  96              		.cfi_offset 14, -4
  97 0002 87B0     		sub	sp, sp, #28
  98              		.cfi_def_cfa_offset 32
  66:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x6B, 1, &data, 1, 1000);
  99              		.loc 1 66 3 view .LVU15
  66:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x6B, 1, &data, 1, 1000);
 100              		.loc 1 66 11 is_stmt 0 view .LVU16
 101 0004 0023     		movs	r3, #0
 102 0006 8DF81730 		strb	r3, [sp, #23]
  67:Core/Src/main.c ****   // data = 0xA0;
 103              		.loc 1 67 3 is_stmt 1 view .LVU17
 104 000a 4FF47A73 		mov	r3, #1000
 105 000e 0293     		str	r3, [sp, #8]
 106 0010 0123     		movs	r3, #1
 107 0012 0193     		str	r3, [sp, #4]
 108 0014 0DF11702 		add	r2, sp, #23
 109 0018 0092     		str	r2, [sp]
 110 001a 6B22     		movs	r2, #107
 111 001c D021     		movs	r1, #208
 112 001e 0348     		ldr	r0, .L7
 113 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 114              	.LVL0:
  70:Core/Src/main.c **** void Sample_rate_cfg(void){
 115              		.loc 1 70 1 is_stmt 0 view .LVU18
 116 0024 07B0     		add	sp, sp, #28
 117              		.cfi_def_cfa_offset 4
 118              		@ sp needed
 119 0026 5DF804FB 		ldr	pc, [sp], #4
 120              	.L8:
 121 002a 00BF     		.align	2
 122              	.L7:
 123 002c 00000000 		.word	hi2c1
 124              		.cfi_endproc
 125              	.LFE134:
 127              		.section	.text.Sample_rate_cfg,"ax",%progbits
 128              		.align	1
 129              		.global	Sample_rate_cfg
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 134              	Sample_rate_cfg:
 135              	.LFB135:
  71:Core/Src/main.c **** 	uint8_t Data = 0;
 136              		.loc 1 71 27 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140 0000 00B5     		push	{lr}
 141              		.cfi_def_cfa_offset 4
 142              		.cfi_offset 14, -4
 143 0002 87B0     		sub	sp, sp, #28
 144              		.cfi_def_cfa_offset 32
  72:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x6B, 1, &Data, 1, 1000);
 145              		.loc 1 72 2 view .LVU20
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 8


  72:Core/Src/main.c **** 	HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x6B, 1, &Data, 1, 1000);
 146              		.loc 1 72 10 is_stmt 0 view .LVU21
 147 0004 0023     		movs	r3, #0
 148 0006 8DF81730 		strb	r3, [sp, #23]
  73:Core/Src/main.c **** 
 149              		.loc 1 73 2 is_stmt 1 view .LVU22
 150 000a 4FF47A73 		mov	r3, #1000
 151 000e 0293     		str	r3, [sp, #8]
 152 0010 0123     		movs	r3, #1
 153 0012 0193     		str	r3, [sp, #4]
 154 0014 0DF11702 		add	r2, sp, #23
 155 0018 0092     		str	r2, [sp]
 156 001a 6B22     		movs	r2, #107
 157 001c D021     		movs	r1, #208
 158 001e 0348     		ldr	r0, .L11
 159 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 160              	.LVL1:
  75:Core/Src/main.c **** void GYRO_ACCEL_cfg(void){
 161              		.loc 1 75 1 is_stmt 0 view .LVU23
 162 0024 07B0     		add	sp, sp, #28
 163              		.cfi_def_cfa_offset 4
 164              		@ sp needed
 165 0026 5DF804FB 		ldr	pc, [sp], #4
 166              	.L12:
 167 002a 00BF     		.align	2
 168              	.L11:
 169 002c 00000000 		.word	hi2c1
 170              		.cfi_endproc
 171              	.LFE135:
 173              		.section	.text.GYRO_ACCEL_cfg,"ax",%progbits
 174              		.align	1
 175              		.global	GYRO_ACCEL_cfg
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	GYRO_ACCEL_cfg:
 181              	.LFB136:
  76:Core/Src/main.c ****   uint8_t data = 0x00;
 182              		.loc 1 76 26 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 8
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 187              		.cfi_def_cfa_offset 20
 188              		.cfi_offset 4, -20
 189              		.cfi_offset 5, -16
 190              		.cfi_offset 6, -12
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 87B0     		sub	sp, sp, #28
 194              		.cfi_def_cfa_offset 48
  77:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x1B, 1, &data, 1, 1000); // config gyro
 195              		.loc 1 77 3 view .LVU25
  77:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x1B, 1, &data, 1, 1000); // config gyro
 196              		.loc 1 77 11 is_stmt 0 view .LVU26
 197 0004 0023     		movs	r3, #0
 198 0006 8DF81730 		strb	r3, [sp, #23]
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 9


  78:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, 0x1C, 1, &data, 1, 1000); // config accel
 199              		.loc 1 78 3 is_stmt 1 view .LVU27
 200 000a 0D4D     		ldr	r5, .L15
 201 000c 4FF47A77 		mov	r7, #1000
 202 0010 0297     		str	r7, [sp, #8]
 203 0012 0124     		movs	r4, #1
 204 0014 0194     		str	r4, [sp, #4]
 205 0016 0DF11706 		add	r6, sp, #23
 206 001a 0096     		str	r6, [sp]
 207 001c 2346     		mov	r3, r4
 208 001e 1B22     		movs	r2, #27
 209 0020 D021     		movs	r1, #208
 210 0022 2846     		mov	r0, r5
 211 0024 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 212              	.LVL2:
  79:Core/Src/main.c **** }
 213              		.loc 1 79 3 view .LVU28
 214 0028 0297     		str	r7, [sp, #8]
 215 002a 0194     		str	r4, [sp, #4]
 216 002c 0096     		str	r6, [sp]
 217 002e 2346     		mov	r3, r4
 218 0030 1C22     		movs	r2, #28
 219 0032 D021     		movs	r1, #208
 220 0034 2846     		mov	r0, r5
 221 0036 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 222              	.LVL3:
  80:Core/Src/main.c **** void MPU6050_Init(void){
 223              		.loc 1 80 1 is_stmt 0 view .LVU29
 224 003a 07B0     		add	sp, sp, #28
 225              		.cfi_def_cfa_offset 20
 226              		@ sp needed
 227 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 228              	.L16:
 229 003e 00BF     		.align	2
 230              	.L15:
 231 0040 00000000 		.word	hi2c1
 232              		.cfi_endproc
 233              	.LFE136:
 235              		.section	.text.MPU6050_Init,"ax",%progbits
 236              		.align	1
 237              		.global	MPU6050_Init
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	MPU6050_Init:
 243              	.LFB137:
  81:Core/Src/main.c ****   uint8_t data;
 244              		.loc 1 81 24 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 00B5     		push	{lr}
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 14, -4
 251 0002 87B0     		sub	sp, sp, #28
 252              		.cfi_def_cfa_offset 32
  82:Core/Src/main.c ****   uint8_t check;
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 10


 253              		.loc 1 82 3 view .LVU31
  83:Core/Src/main.c ****   check = HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, 0x75, 1, &data,1, 1000 );
 254              		.loc 1 83 3 view .LVU32
  84:Core/Src/main.c ****   if(data == 0x68){
 255              		.loc 1 84 3 view .LVU33
  84:Core/Src/main.c ****   if(data == 0x68){
 256              		.loc 1 84 11 is_stmt 0 view .LVU34
 257 0004 4FF47A73 		mov	r3, #1000
 258 0008 0293     		str	r3, [sp, #8]
 259 000a 0123     		movs	r3, #1
 260 000c 0193     		str	r3, [sp, #4]
 261 000e 0DF11702 		add	r2, sp, #23
 262 0012 0092     		str	r2, [sp]
 263 0014 7522     		movs	r2, #117
 264 0016 D021     		movs	r1, #208
 265 0018 0848     		ldr	r0, .L21
 266 001a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 267              	.LVL4:
  85:Core/Src/main.c ****     Power_Management_1();
 268              		.loc 1 85 3 is_stmt 1 view .LVU35
  85:Core/Src/main.c ****     Power_Management_1();
 269              		.loc 1 85 11 is_stmt 0 view .LVU36
 270 001e 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
  85:Core/Src/main.c ****     Power_Management_1();
 271              		.loc 1 85 5 view .LVU37
 272 0022 682B     		cmp	r3, #104
 273 0024 02D0     		beq	.L20
 274              	.L17:
  91:Core/Src/main.c **** uint16_t Gyro_X_RAW;
 275              		.loc 1 91 1 view .LVU38
 276 0026 07B0     		add	sp, sp, #28
 277              		.cfi_remember_state
 278              		.cfi_def_cfa_offset 4
 279              		@ sp needed
 280 0028 5DF804FB 		ldr	pc, [sp], #4
 281              	.L20:
 282              		.cfi_restore_state
  86:Core/Src/main.c ****     Sample_rate_cfg();
 283              		.loc 1 86 5 is_stmt 1 view .LVU39
 284 002c FFF7FEFF 		bl	Power_Management_1
 285              	.LVL5:
  87:Core/Src/main.c ****     GYRO_ACCEL_cfg();
 286              		.loc 1 87 5 view .LVU40
 287 0030 FFF7FEFF 		bl	Sample_rate_cfg
 288              	.LVL6:
  88:Core/Src/main.c ****   
 289              		.loc 1 88 5 view .LVU41
 290 0034 FFF7FEFF 		bl	GYRO_ACCEL_cfg
 291              	.LVL7:
  91:Core/Src/main.c **** uint16_t Gyro_X_RAW;
 292              		.loc 1 91 1 is_stmt 0 view .LVU42
 293 0038 F5E7     		b	.L17
 294              	.L22:
 295 003a 00BF     		.align	2
 296              	.L21:
 297 003c 00000000 		.word	hi2c1
 298              		.cfi_endproc
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 11


 299              	.LFE137:
 301              		.section	.text.MPU6050_Read_Gyro,"ax",%progbits
 302              		.align	1
 303              		.global	MPU6050_Read_Gyro
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	MPU6050_Read_Gyro:
 309              	.LFB138:
 100:Core/Src/main.c **** 
 310              		.loc 1 100 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 10B5     		push	{r4, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 4, -8
 317              		.cfi_offset 14, -4
 318 0002 84B0     		sub	sp, sp, #16
 319              		.cfi_def_cfa_offset 24
 102:Core/Src/main.c ****   Gyro_X_RAW = (int16_t)(Rec_Data[0] << 8 | Rec_Data [1]);
 320              		.loc 1 102 3 view .LVU44
 321 0004 4FF47A73 		mov	r3, #1000
 322 0008 0293     		str	r3, [sp, #8]
 323 000a 0623     		movs	r3, #6
 324 000c 0193     		str	r3, [sp, #4]
 325 000e 1E4C     		ldr	r4, .L25
 326 0010 0094     		str	r4, [sp]
 327 0012 0123     		movs	r3, #1
 328 0014 4322     		movs	r2, #67
 329 0016 D021     		movs	r1, #208
 330 0018 1C48     		ldr	r0, .L25+4
 331 001a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 332              	.LVL8:
 103:Core/Src/main.c ****   Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 333              		.loc 1 103 3 view .LVU45
 103:Core/Src/main.c ****   Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 334              		.loc 1 103 34 is_stmt 0 view .LVU46
 335 001e 2388     		ldrh	r3, [r4]
 103:Core/Src/main.c ****   Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 336              		.loc 1 103 54 view .LVU47
 337 0020 6188     		ldrh	r1, [r4, #2]
 103:Core/Src/main.c ****   Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 338              		.loc 1 103 16 view .LVU48
 339 0022 41EA0321 		orr	r1, r1, r3, lsl #8
 340 0026 89B2     		uxth	r1, r1
 103:Core/Src/main.c ****   Gyro_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data [3]);
 341              		.loc 1 103 14 view .LVU49
 342 0028 194B     		ldr	r3, .L25+8
 343 002a 1980     		strh	r1, [r3]	@ movhi
 104:Core/Src/main.c ****   Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 344              		.loc 1 104 3 is_stmt 1 view .LVU50
 104:Core/Src/main.c ****   Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 345              		.loc 1 104 34 is_stmt 0 view .LVU51
 346 002c A388     		ldrh	r3, [r4, #4]
 104:Core/Src/main.c ****   Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 347              		.loc 1 104 54 view .LVU52
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 12


 348 002e E288     		ldrh	r2, [r4, #6]
 104:Core/Src/main.c ****   Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 349              		.loc 1 104 16 view .LVU53
 350 0030 42EA0322 		orr	r2, r2, r3, lsl #8
 351 0034 92B2     		uxth	r2, r2
 104:Core/Src/main.c ****   Gyro_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data [5]);
 352              		.loc 1 104 14 view .LVU54
 353 0036 174B     		ldr	r3, .L25+12
 354 0038 1A80     		strh	r2, [r3]	@ movhi
 105:Core/Src/main.c ****   Gx = (float)Gyro_X_RAW/131.0;
 355              		.loc 1 105 3 is_stmt 1 view .LVU55
 105:Core/Src/main.c ****   Gx = (float)Gyro_X_RAW/131.0;
 356              		.loc 1 105 34 is_stmt 0 view .LVU56
 357 003a 2089     		ldrh	r0, [r4, #8]
 105:Core/Src/main.c ****   Gx = (float)Gyro_X_RAW/131.0;
 358              		.loc 1 105 54 view .LVU57
 359 003c 6389     		ldrh	r3, [r4, #10]
 105:Core/Src/main.c ****   Gx = (float)Gyro_X_RAW/131.0;
 360              		.loc 1 105 16 view .LVU58
 361 003e 43EA0023 		orr	r3, r3, r0, lsl #8
 362 0042 9BB2     		uxth	r3, r3
 105:Core/Src/main.c ****   Gx = (float)Gyro_X_RAW/131.0;
 363              		.loc 1 105 14 view .LVU59
 364 0044 1448     		ldr	r0, .L25+16
 365 0046 0380     		strh	r3, [r0]	@ movhi
 106:Core/Src/main.c ****   Gy = (float)Gyro_Y_RAW/131.0;
 366              		.loc 1 106 3 is_stmt 1 view .LVU60
 106:Core/Src/main.c ****   Gy = (float)Gyro_Y_RAW/131.0;
 367              		.loc 1 106 8 is_stmt 0 view .LVU61
 368 0048 07EE901A 		vmov	s15, r1	@ int
 369 004c F8EE677A 		vcvt.f32.u32	s15, s15
 106:Core/Src/main.c ****   Gy = (float)Gyro_Y_RAW/131.0;
 370              		.loc 1 106 25 view .LVU62
 371 0050 9FED127A 		vldr.32	s14, .L25+20
 372 0054 C7EE876A 		vdiv.f32	s13, s15, s14
 106:Core/Src/main.c ****   Gy = (float)Gyro_Y_RAW/131.0;
 373              		.loc 1 106 6 view .LVU63
 374 0058 1149     		ldr	r1, .L25+24
 375 005a C1ED006A 		vstr.32	s13, [r1]
 107:Core/Src/main.c ****   Gz = (float)Gyro_Z_RAW/131.0;
 376              		.loc 1 107 3 is_stmt 1 view .LVU64
 107:Core/Src/main.c ****   Gz = (float)Gyro_Z_RAW/131.0;
 377              		.loc 1 107 8 is_stmt 0 view .LVU65
 378 005e 07EE902A 		vmov	s15, r2	@ int
 379 0062 F8EE677A 		vcvt.f32.u32	s15, s15
 107:Core/Src/main.c ****   Gz = (float)Gyro_Z_RAW/131.0;
 380              		.loc 1 107 25 view .LVU66
 381 0066 C7EE876A 		vdiv.f32	s13, s15, s14
 107:Core/Src/main.c ****   Gz = (float)Gyro_Z_RAW/131.0;
 382              		.loc 1 107 6 view .LVU67
 383 006a 0E4A     		ldr	r2, .L25+28
 384 006c C2ED006A 		vstr.32	s13, [r2]
 108:Core/Src/main.c **** }
 385              		.loc 1 108 3 is_stmt 1 view .LVU68
 108:Core/Src/main.c **** }
 386              		.loc 1 108 8 is_stmt 0 view .LVU69
 387 0070 07EE903A 		vmov	s15, r3	@ int
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 13


 388 0074 F8EE677A 		vcvt.f32.u32	s15, s15
 108:Core/Src/main.c **** }
 389              		.loc 1 108 25 view .LVU70
 390 0078 C7EE876A 		vdiv.f32	s13, s15, s14
 108:Core/Src/main.c **** }
 391              		.loc 1 108 6 view .LVU71
 392 007c 0A4B     		ldr	r3, .L25+32
 393 007e C3ED006A 		vstr.32	s13, [r3]
 109:Core/Src/main.c **** /* USER CODE END 0 */
 394              		.loc 1 109 1 view .LVU72
 395 0082 04B0     		add	sp, sp, #16
 396              		.cfi_def_cfa_offset 8
 397              		@ sp needed
 398 0084 10BD     		pop	{r4, pc}
 399              	.L26:
 400 0086 00BF     		.align	2
 401              	.L25:
 402 0088 00000000 		.word	Rec_Data
 403 008c 00000000 		.word	hi2c1
 404 0090 00000000 		.word	Gyro_X_RAW
 405 0094 00000000 		.word	Gyro_Y_RAW
 406 0098 00000000 		.word	Gyro_Z_RAW
 407 009c 00000343 		.word	1124270080
 408 00a0 00000000 		.word	Gx
 409 00a4 00000000 		.word	Gy
 410 00a8 00000000 		.word	Gz
 411              		.cfi_endproc
 412              	.LFE138:
 414              		.section	.text.Error_Handler,"ax",%progbits
 415              		.align	1
 416              		.global	Error_Handler
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 421              	Error_Handler:
 422              	.LFB143:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /* USER CODE END 4 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 260:Core/Src/main.c ****   * @retval None
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c **** void Error_Handler(void)
 263:Core/Src/main.c **** {
 423              		.loc 1 263 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ Volatile: function does not return.
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 264:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 265:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 266:Core/Src/main.c ****   __disable_irq();
 429              		.loc 1 266 3 view .LVU74
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 14


 430              	.LBB6:
 431              	.LBI6:
 432              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 15


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 16


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 17


 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 18


 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 19


 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 20


 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 21


 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 22


 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 23


 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 24


 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 25


 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 26


 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 27


 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 28


 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 29


 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 30


 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 433              		.loc 2 960 27 view .LVU75
 434              	.LBB7:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 435              		.loc 2 962 3 view .LVU76
 436              		.syntax unified
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 31


 437              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 438 0000 72B6     		cpsid i
 439              	@ 0 "" 2
 440              		.thumb
 441              		.syntax unified
 442              	.L28:
 443              	.LBE7:
 444              	.LBE6:
 267:Core/Src/main.c ****   while (1)
 445              		.loc 1 267 3 view .LVU77
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****   }
 446              		.loc 1 269 3 view .LVU78
 267:Core/Src/main.c ****   while (1)
 447              		.loc 1 267 9 view .LVU79
 448 0002 FEE7     		b	.L28
 449              		.cfi_endproc
 450              	.LFE143:
 452              		.section	.text.MX_I2C1_Init,"ax",%progbits
 453              		.align	1
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 458              	MX_I2C1_Init:
 459              	.LFB141:
 206:Core/Src/main.c **** 
 460              		.loc 1 206 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 08B5     		push	{r3, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 3, -8
 467              		.cfi_offset 14, -4
 215:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 468              		.loc 1 215 3 view .LVU81
 215:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 469              		.loc 1 215 18 is_stmt 0 view .LVU82
 470 0002 0A48     		ldr	r0, .L33
 471 0004 0A4B     		ldr	r3, .L33+4
 472 0006 0360     		str	r3, [r0]
 216:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 473              		.loc 1 216 3 is_stmt 1 view .LVU83
 216:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 474              		.loc 1 216 25 is_stmt 0 view .LVU84
 475 0008 0A4B     		ldr	r3, .L33+8
 476 000a 4360     		str	r3, [r0, #4]
 217:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 477              		.loc 1 217 3 is_stmt 1 view .LVU85
 217:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 478              		.loc 1 217 24 is_stmt 0 view .LVU86
 479 000c 0023     		movs	r3, #0
 480 000e 8360     		str	r3, [r0, #8]
 218:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 481              		.loc 1 218 3 is_stmt 1 view .LVU87
 218:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 482              		.loc 1 218 26 is_stmt 0 view .LVU88
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 32


 483 0010 C360     		str	r3, [r0, #12]
 219:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 484              		.loc 1 219 3 is_stmt 1 view .LVU89
 219:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 485              		.loc 1 219 29 is_stmt 0 view .LVU90
 486 0012 4FF48042 		mov	r2, #16384
 487 0016 0261     		str	r2, [r0, #16]
 220:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 488              		.loc 1 220 3 is_stmt 1 view .LVU91
 220:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 489              		.loc 1 220 30 is_stmt 0 view .LVU92
 490 0018 4361     		str	r3, [r0, #20]
 221:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 491              		.loc 1 221 3 is_stmt 1 view .LVU93
 221:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 492              		.loc 1 221 26 is_stmt 0 view .LVU94
 493 001a 8361     		str	r3, [r0, #24]
 222:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 494              		.loc 1 222 3 is_stmt 1 view .LVU95
 222:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 495              		.loc 1 222 30 is_stmt 0 view .LVU96
 496 001c C361     		str	r3, [r0, #28]
 223:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 497              		.loc 1 223 3 is_stmt 1 view .LVU97
 223:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 498              		.loc 1 223 28 is_stmt 0 view .LVU98
 499 001e 0362     		str	r3, [r0, #32]
 224:Core/Src/main.c ****   {
 500              		.loc 1 224 3 is_stmt 1 view .LVU99
 224:Core/Src/main.c ****   {
 501              		.loc 1 224 7 is_stmt 0 view .LVU100
 502 0020 FFF7FEFF 		bl	HAL_I2C_Init
 503              	.LVL9:
 224:Core/Src/main.c ****   {
 504              		.loc 1 224 6 discriminator 1 view .LVU101
 505 0024 00B9     		cbnz	r0, .L32
 232:Core/Src/main.c **** 
 506              		.loc 1 232 1 view .LVU102
 507 0026 08BD     		pop	{r3, pc}
 508              	.L32:
 226:Core/Src/main.c ****   }
 509              		.loc 1 226 5 is_stmt 1 view .LVU103
 510 0028 FFF7FEFF 		bl	Error_Handler
 511              	.LVL10:
 512              	.L34:
 513              		.align	2
 514              	.L33:
 515 002c 00000000 		.word	hi2c1
 516 0030 00540040 		.word	1073763328
 517 0034 A0860100 		.word	100000
 518              		.cfi_endproc
 519              	.LFE141:
 521              		.section	.text.SystemClock_Config,"ax",%progbits
 522              		.align	1
 523              		.global	SystemClock_Config
 524              		.syntax unified
 525              		.thumb
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 33


 526              		.thumb_func
 528              	SystemClock_Config:
 529              	.LFB140:
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 530              		.loc 1 164 1 view -0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 80
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 00B5     		push	{lr}
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 14, -4
 537 0002 95B0     		sub	sp, sp, #84
 538              		.cfi_def_cfa_offset 88
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 539              		.loc 1 165 3 view .LVU105
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 540              		.loc 1 165 22 is_stmt 0 view .LVU106
 541 0004 3022     		movs	r2, #48
 542 0006 0021     		movs	r1, #0
 543 0008 08A8     		add	r0, sp, #32
 544 000a FFF7FEFF 		bl	memset
 545              	.LVL11:
 166:Core/Src/main.c **** 
 546              		.loc 1 166 3 is_stmt 1 view .LVU107
 166:Core/Src/main.c **** 
 547              		.loc 1 166 22 is_stmt 0 view .LVU108
 548 000e 0023     		movs	r3, #0
 549 0010 0393     		str	r3, [sp, #12]
 550 0012 0493     		str	r3, [sp, #16]
 551 0014 0593     		str	r3, [sp, #20]
 552 0016 0693     		str	r3, [sp, #24]
 553 0018 0793     		str	r3, [sp, #28]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 554              		.loc 1 170 3 is_stmt 1 view .LVU109
 555              	.LBB8:
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 556              		.loc 1 170 3 view .LVU110
 557 001a 0193     		str	r3, [sp, #4]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 558              		.loc 1 170 3 view .LVU111
 559 001c 184A     		ldr	r2, .L41
 560 001e 116C     		ldr	r1, [r2, #64]
 561 0020 41F08051 		orr	r1, r1, #268435456
 562 0024 1164     		str	r1, [r2, #64]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 563              		.loc 1 170 3 view .LVU112
 564 0026 126C     		ldr	r2, [r2, #64]
 565 0028 02F08052 		and	r2, r2, #268435456
 566 002c 0192     		str	r2, [sp, #4]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 567              		.loc 1 170 3 view .LVU113
 568 002e 019A     		ldr	r2, [sp, #4]
 569              	.LBE8:
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 570              		.loc 1 170 3 view .LVU114
 171:Core/Src/main.c **** 
 571              		.loc 1 171 3 view .LVU115
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 34


 572              	.LBB9:
 171:Core/Src/main.c **** 
 573              		.loc 1 171 3 view .LVU116
 574 0030 0293     		str	r3, [sp, #8]
 171:Core/Src/main.c **** 
 575              		.loc 1 171 3 view .LVU117
 576 0032 144A     		ldr	r2, .L41+4
 577 0034 1168     		ldr	r1, [r2]
 578 0036 41F48041 		orr	r1, r1, #16384
 579 003a 1160     		str	r1, [r2]
 171:Core/Src/main.c **** 
 580              		.loc 1 171 3 view .LVU118
 581 003c 1268     		ldr	r2, [r2]
 582 003e 02F48042 		and	r2, r2, #16384
 583 0042 0292     		str	r2, [sp, #8]
 171:Core/Src/main.c **** 
 584              		.loc 1 171 3 view .LVU119
 585 0044 029A     		ldr	r2, [sp, #8]
 586              	.LBE9:
 171:Core/Src/main.c **** 
 587              		.loc 1 171 3 view .LVU120
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 588              		.loc 1 176 3 view .LVU121
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 589              		.loc 1 176 36 is_stmt 0 view .LVU122
 590 0046 0222     		movs	r2, #2
 591 0048 0892     		str	r2, [sp, #32]
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 592              		.loc 1 177 3 is_stmt 1 view .LVU123
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 593              		.loc 1 177 30 is_stmt 0 view .LVU124
 594 004a 0122     		movs	r2, #1
 595 004c 0B92     		str	r2, [sp, #44]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 596              		.loc 1 178 3 is_stmt 1 view .LVU125
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 597              		.loc 1 178 41 is_stmt 0 view .LVU126
 598 004e 1022     		movs	r2, #16
 599 0050 0C92     		str	r2, [sp, #48]
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 600              		.loc 1 179 3 is_stmt 1 view .LVU127
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 601              		.loc 1 179 34 is_stmt 0 view .LVU128
 602 0052 0E93     		str	r3, [sp, #56]
 180:Core/Src/main.c ****   {
 603              		.loc 1 180 3 is_stmt 1 view .LVU129
 180:Core/Src/main.c ****   {
 604              		.loc 1 180 7 is_stmt 0 view .LVU130
 605 0054 08A8     		add	r0, sp, #32
 606 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 607              	.LVL12:
 180:Core/Src/main.c ****   {
 608              		.loc 1 180 6 discriminator 1 view .LVU131
 609 005a 68B9     		cbnz	r0, .L39
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 610              		.loc 1 187 3 is_stmt 1 view .LVU132
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 35


 611              		.loc 1 187 31 is_stmt 0 view .LVU133
 612 005c 0F23     		movs	r3, #15
 613 005e 0393     		str	r3, [sp, #12]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 614              		.loc 1 189 3 is_stmt 1 view .LVU134
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 615              		.loc 1 189 34 is_stmt 0 view .LVU135
 616 0060 0021     		movs	r1, #0
 617 0062 0491     		str	r1, [sp, #16]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 618              		.loc 1 190 3 is_stmt 1 view .LVU136
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 619              		.loc 1 190 35 is_stmt 0 view .LVU137
 620 0064 0591     		str	r1, [sp, #20]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 621              		.loc 1 191 3 is_stmt 1 view .LVU138
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 622              		.loc 1 191 36 is_stmt 0 view .LVU139
 623 0066 0691     		str	r1, [sp, #24]
 192:Core/Src/main.c **** 
 624              		.loc 1 192 3 is_stmt 1 view .LVU140
 192:Core/Src/main.c **** 
 625              		.loc 1 192 36 is_stmt 0 view .LVU141
 626 0068 0791     		str	r1, [sp, #28]
 194:Core/Src/main.c ****   {
 627              		.loc 1 194 3 is_stmt 1 view .LVU142
 194:Core/Src/main.c ****   {
 628              		.loc 1 194 7 is_stmt 0 view .LVU143
 629 006a 03A8     		add	r0, sp, #12
 630 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 631              	.LVL13:
 194:Core/Src/main.c ****   {
 632              		.loc 1 194 6 discriminator 1 view .LVU144
 633 0070 20B9     		cbnz	r0, .L40
 198:Core/Src/main.c **** 
 634              		.loc 1 198 1 view .LVU145
 635 0072 15B0     		add	sp, sp, #84
 636              		.cfi_remember_state
 637              		.cfi_def_cfa_offset 4
 638              		@ sp needed
 639 0074 5DF804FB 		ldr	pc, [sp], #4
 640              	.L39:
 641              		.cfi_restore_state
 182:Core/Src/main.c ****   }
 642              		.loc 1 182 5 is_stmt 1 view .LVU146
 643 0078 FFF7FEFF 		bl	Error_Handler
 644              	.LVL14:
 645              	.L40:
 196:Core/Src/main.c ****   }
 646              		.loc 1 196 5 view .LVU147
 647 007c FFF7FEFF 		bl	Error_Handler
 648              	.LVL15:
 649              	.L42:
 650              		.align	2
 651              	.L41:
 652 0080 00380240 		.word	1073887232
 653 0084 00700040 		.word	1073770496
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 36


 654              		.cfi_endproc
 655              	.LFE140:
 657              		.section	.text.main,"ax",%progbits
 658              		.align	1
 659              		.global	main
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 664              	main:
 665              	.LFB139:
 117:Core/Src/main.c **** 
 666              		.loc 1 117 1 view -0
 667              		.cfi_startproc
 668              		@ Volatile: function does not return.
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671 0000 08B5     		push	{r3, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 126:Core/Src/main.c **** 
 675              		.loc 1 126 3 view .LVU149
 676 0002 FFF7FEFF 		bl	HAL_Init
 677              	.LVL16:
 133:Core/Src/main.c **** 
 678              		.loc 1 133 3 view .LVU150
 679 0006 FFF7FEFF 		bl	SystemClock_Config
 680              	.LVL17:
 140:Core/Src/main.c ****   MX_I2C1_Init();
 681              		.loc 1 140 3 view .LVU151
 682 000a FFF7FEFF 		bl	MX_GPIO_Init
 683              	.LVL18:
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 684              		.loc 1 141 3 view .LVU152
 685 000e FFF7FEFF 		bl	MX_I2C1_Init
 686              	.LVL19:
 144:Core/Src/main.c ****   /* Infinite loop */
 687              		.loc 1 144 3 view .LVU153
 688 0012 FFF7FEFF 		bl	MPU6050_Init
 689              	.LVL20:
 690              	.L44:
 147:Core/Src/main.c ****   {
 691              		.loc 1 147 3 view .LVU154
 152:Core/Src/main.c ****    HAL_Delay(100);
 692              		.loc 1 152 4 view .LVU155
 693 0016 FFF7FEFF 		bl	MPU6050_Read_Gyro
 694              	.LVL21:
 153:Core/Src/main.c **** 
 695              		.loc 1 153 4 discriminator 1 view .LVU156
 696 001a 6420     		movs	r0, #100
 697 001c FFF7FEFF 		bl	HAL_Delay
 698              	.LVL22:
 147:Core/Src/main.c ****   {
 699              		.loc 1 147 9 view .LVU157
 700 0020 F9E7     		b	.L44
 701              		.cfi_endproc
 702              	.LFE139:
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 37


 704              		.global	Rec_Data
 705              		.section	.bss.Rec_Data,"aw",%nobits
 706              		.align	2
 709              	Rec_Data:
 710 0000 00000000 		.space	12
 710      00000000 
 710      00000000 
 711              		.global	Gz
 712              		.section	.bss.Gz,"aw",%nobits
 713              		.align	2
 716              	Gz:
 717 0000 00000000 		.space	4
 718              		.global	Gy
 719              		.section	.bss.Gy,"aw",%nobits
 720              		.align	2
 723              	Gy:
 724 0000 00000000 		.space	4
 725              		.global	Gx
 726              		.section	.bss.Gx,"aw",%nobits
 727              		.align	2
 730              	Gx:
 731 0000 00000000 		.space	4
 732              		.global	Gyro_Z_RAW
 733              		.section	.bss.Gyro_Z_RAW,"aw",%nobits
 734              		.align	1
 737              	Gyro_Z_RAW:
 738 0000 0000     		.space	2
 739              		.global	Gyro_Y_RAW
 740              		.section	.bss.Gyro_Y_RAW,"aw",%nobits
 741              		.align	1
 744              	Gyro_Y_RAW:
 745 0000 0000     		.space	2
 746              		.global	Gyro_X_RAW
 747              		.section	.bss.Gyro_X_RAW,"aw",%nobits
 748              		.align	1
 751              	Gyro_X_RAW:
 752 0000 0000     		.space	2
 753              		.global	hi2c1
 754              		.section	.bss.hi2c1,"aw",%nobits
 755              		.align	2
 758              	hi2c1:
 759 0000 00000000 		.space	84
 759      00000000 
 759      00000000 
 759      00000000 
 759      00000000 
 760              		.text
 761              	.Letext0:
 762              		.file 3 "C:\\ST\\STM32CubeCLT_1.18.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/13.3.1/..
 763              		.file 4 "C:\\ST\\STM32CubeCLT_1.18.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/13.3.1/..
 764              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 765              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 766              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 767              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 768              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 769              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 770              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 38


 771              		.file 12 "<built-in>"
ARM GAS  C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:77     .text.MX_GPIO_Init:00000034 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:82     .text.Power_Management_1:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:88     .text.Power_Management_1:00000000 Power_Management_1
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:123    .text.Power_Management_1:0000002c $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:758    .bss.hi2c1:00000000 hi2c1
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:128    .text.Sample_rate_cfg:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:134    .text.Sample_rate_cfg:00000000 Sample_rate_cfg
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:169    .text.Sample_rate_cfg:0000002c $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:174    .text.GYRO_ACCEL_cfg:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:180    .text.GYRO_ACCEL_cfg:00000000 GYRO_ACCEL_cfg
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:231    .text.GYRO_ACCEL_cfg:00000040 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:236    .text.MPU6050_Init:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:242    .text.MPU6050_Init:00000000 MPU6050_Init
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:297    .text.MPU6050_Init:0000003c $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:302    .text.MPU6050_Read_Gyro:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:308    .text.MPU6050_Read_Gyro:00000000 MPU6050_Read_Gyro
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:402    .text.MPU6050_Read_Gyro:00000088 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:709    .bss.Rec_Data:00000000 Rec_Data
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:751    .bss.Gyro_X_RAW:00000000 Gyro_X_RAW
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:744    .bss.Gyro_Y_RAW:00000000 Gyro_Y_RAW
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:737    .bss.Gyro_Z_RAW:00000000 Gyro_Z_RAW
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:730    .bss.Gx:00000000 Gx
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:723    .bss.Gy:00000000 Gy
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:716    .bss.Gz:00000000 Gz
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:415    .text.Error_Handler:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:421    .text.Error_Handler:00000000 Error_Handler
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:453    .text.MX_I2C1_Init:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:458    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:515    .text.MX_I2C1_Init:0000002c $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:522    .text.SystemClock_Config:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:528    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:652    .text.SystemClock_Config:00000080 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:658    .text.main:00000000 $t
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:664    .text.main:00000000 main
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:706    .bss.Rec_Data:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:713    .bss.Gz:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:720    .bss.Gy:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:727    .bss.Gx:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:734    .bss.Gyro_Z_RAW:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:741    .bss.Gyro_Y_RAW:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:748    .bss.Gyro_X_RAW:00000000 $d
C:\Users\datpt\AppData\Local\Temp\ccjlSt91.s:755    .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
HAL_I2C_Mem_Read
HAL_I2C_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
